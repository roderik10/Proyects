//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.18449.
// 
#pragma warning disable 1591

namespace Hangman.titanic {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="B02430_HangmanBinding", Namespace="urn:B02430_Hangman")]
    public partial class B02430_Hangman : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback fetchWordArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback hideCharactersOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkAndReplaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkGameOverOperationCompleted;
        
        private System.Threading.SendOrPostCallback getIntentosOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback selectOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public B02430_Hangman() {
            this.Url = global::Hangman.Properties.Settings.Default.Hangman_titanic_B02430_Hangman;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event fetchWordArrayCompletedEventHandler fetchWordArrayCompleted;
        
        /// <remarks/>
        public event hideCharactersCompletedEventHandler hideCharactersCompleted;
        
        /// <remarks/>
        public event checkAndReplaceCompletedEventHandler checkAndReplaceCompleted;
        
        /// <remarks/>
        public event checkGameOverCompletedEventHandler checkGameOverCompleted;
        
        /// <remarks/>
        public event getIntentosCompletedEventHandler getIntentosCompleted;
        
        /// <remarks/>
        public event getTimeCompletedEventHandler getTimeCompleted;
        
        /// <remarks/>
        public event selectCompletedEventHandler selectCompleted;
        
        /// <remarks/>
        public event insertCompletedEventHandler insertCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:B02430_Hangman#Hangman#fetchWordArray", RequestNamespace="urn:B02430_Hangman", ResponseNamespace="urn:B02430_Hangman")]
        [return: System.Xml.Serialization.SoapElementAttribute("fetchResp")]
        public string fetchWordArray(string wordFile) {
            object[] results = this.Invoke("fetchWordArray", new object[] {
                        wordFile});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fetchWordArrayAsync(string wordFile) {
            this.fetchWordArrayAsync(wordFile, null);
        }
        
        /// <remarks/>
        public void fetchWordArrayAsync(string wordFile, object userState) {
            if ((this.fetchWordArrayOperationCompleted == null)) {
                this.fetchWordArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfetchWordArrayOperationCompleted);
            }
            this.InvokeAsync("fetchWordArray", new object[] {
                        wordFile}, this.fetchWordArrayOperationCompleted, userState);
        }
        
        private void OnfetchWordArrayOperationCompleted(object arg) {
            if ((this.fetchWordArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fetchWordArrayCompleted(this, new fetchWordArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:B02430_Hangman#Hangman#hideCharacters", RequestNamespace="urn:B02430_Hangman", ResponseNamespace="urn:B02430_Hangman")]
        [return: System.Xml.Serialization.SoapElementAttribute("hideResp")]
        public string hideCharacters(string hideAns, int hideSize) {
            object[] results = this.Invoke("hideCharacters", new object[] {
                        hideAns,
                        hideSize});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void hideCharactersAsync(string hideAns, int hideSize) {
            this.hideCharactersAsync(hideAns, hideSize, null);
        }
        
        /// <remarks/>
        public void hideCharactersAsync(string hideAns, int hideSize, object userState) {
            if ((this.hideCharactersOperationCompleted == null)) {
                this.hideCharactersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhideCharactersOperationCompleted);
            }
            this.InvokeAsync("hideCharacters", new object[] {
                        hideAns,
                        hideSize}, this.hideCharactersOperationCompleted, userState);
        }
        
        private void OnhideCharactersOperationCompleted(object arg) {
            if ((this.hideCharactersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.hideCharactersCompleted(this, new hideCharactersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:B02430_Hangman#Hangman#checkAndReplace", RequestNamespace="urn:B02430_Hangman", ResponseNamespace="urn:B02430_Hangman")]
        [return: System.Xml.Serialization.SoapElementAttribute("checkResp")]
        public string checkAndReplace(string userInput, string checkHidd, string checkAns, int checkSize) {
            object[] results = this.Invoke("checkAndReplace", new object[] {
                        userInput,
                        checkHidd,
                        checkAns,
                        checkSize});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void checkAndReplaceAsync(string userInput, string checkHidd, string checkAns, int checkSize) {
            this.checkAndReplaceAsync(userInput, checkHidd, checkAns, checkSize, null);
        }
        
        /// <remarks/>
        public void checkAndReplaceAsync(string userInput, string checkHidd, string checkAns, int checkSize, object userState) {
            if ((this.checkAndReplaceOperationCompleted == null)) {
                this.checkAndReplaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckAndReplaceOperationCompleted);
            }
            this.InvokeAsync("checkAndReplace", new object[] {
                        userInput,
                        checkHidd,
                        checkAns,
                        checkSize}, this.checkAndReplaceOperationCompleted, userState);
        }
        
        private void OncheckAndReplaceOperationCompleted(object arg) {
            if ((this.checkAndReplaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkAndReplaceCompleted(this, new checkAndReplaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:B02430_Hangman#Hangman#checkGameOver", RequestNamespace="urn:B02430_Hangman", ResponseNamespace="urn:B02430_Hangman")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public int checkGameOver(string gameAns, string gameAnsHidden) {
            object[] results = this.Invoke("checkGameOver", new object[] {
                        gameAns,
                        gameAnsHidden});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void checkGameOverAsync(string gameAns, string gameAnsHidden) {
            this.checkGameOverAsync(gameAns, gameAnsHidden, null);
        }
        
        /// <remarks/>
        public void checkGameOverAsync(string gameAns, string gameAnsHidden, object userState) {
            if ((this.checkGameOverOperationCompleted == null)) {
                this.checkGameOverOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckGameOverOperationCompleted);
            }
            this.InvokeAsync("checkGameOver", new object[] {
                        gameAns,
                        gameAnsHidden}, this.checkGameOverOperationCompleted, userState);
        }
        
        private void OncheckGameOverOperationCompleted(object arg) {
            if ((this.checkGameOverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkGameOverCompleted(this, new checkGameOverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:B02430_Hangman#Hangman#getIntentos", RequestNamespace="urn:B02430_Hangman", ResponseNamespace="urn:B02430_Hangman")]
        [return: System.Xml.Serialization.SoapElementAttribute("intentos")]
        public int getIntentos() {
            object[] results = this.Invoke("getIntentos", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getIntentosAsync() {
            this.getIntentosAsync(null);
        }
        
        /// <remarks/>
        public void getIntentosAsync(object userState) {
            if ((this.getIntentosOperationCompleted == null)) {
                this.getIntentosOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIntentosOperationCompleted);
            }
            this.InvokeAsync("getIntentos", new object[0], this.getIntentosOperationCompleted, userState);
        }
        
        private void OngetIntentosOperationCompleted(object arg) {
            if ((this.getIntentosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIntentosCompleted(this, new getIntentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:B02430_Hangman#Hangman#getTime", RequestNamespace="urn:B02430_Hangman", ResponseNamespace="urn:B02430_Hangman")]
        [return: System.Xml.Serialization.SoapElementAttribute("time")]
        public int getTime() {
            object[] results = this.Invoke("getTime", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getTimeAsync() {
            this.getTimeAsync(null);
        }
        
        /// <remarks/>
        public void getTimeAsync(object userState) {
            if ((this.getTimeOperationCompleted == null)) {
                this.getTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTimeOperationCompleted);
            }
            this.InvokeAsync("getTime", new object[0], this.getTimeOperationCompleted, userState);
        }
        
        private void OngetTimeOperationCompleted(object arg) {
            if ((this.getTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTimeCompleted(this, new getTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:B02430_Hangman#Hangman#select", RequestNamespace="urn:B02430_Hangman", ResponseNamespace="urn:B02430_Hangman")]
        [return: System.Xml.Serialization.SoapElementAttribute("selectResp")]
        public string[] select() {
            object[] results = this.Invoke("select", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void selectAsync() {
            this.selectAsync(null);
        }
        
        /// <remarks/>
        public void selectAsync(object userState) {
            if ((this.selectOperationCompleted == null)) {
                this.selectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectOperationCompleted);
            }
            this.InvokeAsync("select", new object[0], this.selectOperationCompleted, userState);
        }
        
        private void OnselectOperationCompleted(object arg) {
            if ((this.selectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectCompleted(this, new selectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:B02430_Hangman#Hangman#insert", RequestNamespace="urn:B02430_Hangman", ResponseNamespace="urn:B02430_Hangman")]
        public void insert(string insertReq, int insertReq2) {
            this.Invoke("insert", new object[] {
                        insertReq,
                        insertReq2});
        }
        
        /// <remarks/>
        public void insertAsync(string insertReq, int insertReq2) {
            this.insertAsync(insertReq, insertReq2, null);
        }
        
        /// <remarks/>
        public void insertAsync(string insertReq, int insertReq2, object userState) {
            if ((this.insertOperationCompleted == null)) {
                this.insertOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertOperationCompleted);
            }
            this.InvokeAsync("insert", new object[] {
                        insertReq,
                        insertReq2}, this.insertOperationCompleted, userState);
        }
        
        private void OninsertOperationCompleted(object arg) {
            if ((this.insertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void fetchWordArrayCompletedEventHandler(object sender, fetchWordArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fetchWordArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fetchWordArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void hideCharactersCompletedEventHandler(object sender, hideCharactersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class hideCharactersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal hideCharactersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void checkAndReplaceCompletedEventHandler(object sender, checkAndReplaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkAndReplaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkAndReplaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void checkGameOverCompletedEventHandler(object sender, checkGameOverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkGameOverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkGameOverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getIntentosCompletedEventHandler(object sender, getIntentosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIntentosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIntentosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getTimeCompletedEventHandler(object sender, getTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void selectCompletedEventHandler(object sender, selectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void insertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591